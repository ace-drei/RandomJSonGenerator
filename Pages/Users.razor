@page "/users"

@using System.Net.Http
@using Newtonsoft.Json
@using System.Collections.Generic
@using System.Threading.Tasks
@using System
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@code {
    public class Datum
    {
        public int id { get; set; }
        public string uuid { get; set; }
        public string firstname { get; set; }
        public string lastname { get; set; }
        public string username { get; set; }
        public string password { get; set; }
        public string email { get; set; }
        public string ip { get; set; }
        public string macAddress { get; set; }
        public string website { get; set; }
        public string image { get; set; }
    }

    public class Root
    {
        public string status { get; set; }
        public int code { get; set; }
        public int total { get; set; }
        public List<Datum> data { get; set; }
    }

    private List<Datum> usersData;
    private int quantity = 5; // Default quantity
    private string selectedGender = "male"; // Default gender

    private async Task LoadUsersData()
    {
        try
        {
            var apiUrl = $"https://fakerapi.it/api/v1/users?_quantity={quantity}&_gender={selectedGender}";

            var client = new HttpClient();
            var response = await client.GetAsync(apiUrl);
            response.EnsureSuccessStatusCode();

            var jsonResponse = await response.Content.ReadAsStringAsync();
            var myDeserializedClass = JsonConvert.DeserializeObject<Root>(jsonResponse);

            usersData = myDeserializedClass.data;
        }
        catch (Exception ex)
        {
            // Handle exceptions (e.g., log, display an error message)
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task CopyJsonToClipboard()
    {
        var jsonString = JsonConvert.SerializeObject(usersData, Formatting.Indented);
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", jsonString);
    }

    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("https://localhost:7293/");
    }
}

<h3>Users Data</h3>

<div>
    <label for="quantity">Quantity:</label>
    <input type="number" @bind="quantity" />
</div>

<div>
    <label for="gender">Gender:</label>
    <select @bind="selectedGender">
        <option value="male">Male</option>
        <option value="female">Female</option>
    </select>
</div>

<button @onclick="LoadUsersData">Load Users Data</button>
<button @onclick="CopyJsonToClipboard">Copy JSON to Clipboard</button>
<button @onclick="NavigateToHome">Home</button>

@if (usersData != null)
{
    @foreach (var user in usersData)
    {
                <div>
                    <p>ID: @user.id</p>
                    <p>UUID: @user.uuid</p>
                    <p>First Name: @user.firstname</p>
                    <p>Last Name: @user.lastname</p>
                    <p>Username: @user.username</p>
                    <p>Email: @user.email</p>
                    <p>IP: @user.ip</p>
                    <p>Mac Address: @user.macAddress</p>
                    <p>Website: @user.website</p>
                    <p>Image: @user.image</p>
                </div>
    }
}
else
{
        <p>No data loaded. Click the "Load Users Data" button to load users data.</p>
}
