@page "/persons"

@using System.Net.Http
@using Newtonsoft.Json
@using System.Collections.Generic
@using System.Threading.Tasks
@using System
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@code {
    public class Address
    {
        public int id { get; set; }
        public string street { get; set; }
        public string streetName { get; set; }
        public string buildingNumber { get; set; }
        public string city { get; set; }
        public string zipcode { get; set; }
        public string country { get; set; }
        public string county_code { get; set; }
        public double latitude { get; set; }
        public double longitude { get; set; }
    }

    public class Datum
    {
        public int id { get; set; }
        public string firstname { get; set; }
        public string lastname { get; set; }
        public string email { get; set; }
        public string phone { get; set; }
        public string birthday { get; set; }
        public string gender { get; set; }
        public Address address { get; set; }
        public string website { get; set; }
        public string image { get; set; }
    }

    public class Root
    {
        public string status { get; set; }
        public int code { get; set; }
        public int total { get; set; }
        public List<Datum> data { get; set; }
    }

    private List<Datum> personData;
    private int quantity = 100;
    private string gender = "male";
    private DateTime birthstart = new DateTime(2005, 01, 01);

    private async Task LoadPersonData()
    {
        try
        {
            var apiUrl = $"https://fakerapi.it/api/v1/persons?_quantity={quantity}&_gender={gender}&_birthday_start={birthstart:yyyy-MM-dd}";
            var client = new HttpClient();
            var response = await client.GetAsync(apiUrl);
            response.EnsureSuccessStatusCode();

            var jsonResponse = await response.Content.ReadAsStringAsync();
            var myDeserializedClass = JsonConvert.DeserializeObject<Root>(jsonResponse);

            personData = myDeserializedClass.data;
        }
        catch (Exception ex)
        {
            // Handle exceptions (e.g., log, display an error message)
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task CopyJsonToClipboard()
    {
        var jsonString = JsonConvert.SerializeObject(personData, Formatting.Indented);
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", jsonString);
    }


}

<h3>Person Data</h3>

<div class="input-group">
    <label for="quantity">Quantity:</label>
    <input type="number" id="quantity" @bind="quantity" />
</div>

<div class="input-group">
    <label for="gender">Gender:</label>
    <select id="gender" @bind="gender">
        <option value="male">Male</option>
        <option value="female">Female</option>
    </select>
</div>

<div class="input-group">
    <label for="birthstart">Birth Start:</label>
    <input type="date" id="birthstart" @bind="birthstart" />
</div>

<button class="btn btn-primary" @onclick="LoadPersonData">Load Person Data</button>
<button class="btn btn-primary" @onclick="CopyJsonToClipboard">Copy JSON to Clipboard</button>

@if (personData != null)
{
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Birthday</th>
                    <th>Gender</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var person in personData)
            {
                        <tr>
                            <td>@person.id</td>
                            <td>@person.firstname</td>
                            <td>@person.lastname</td>
                            <td>@person.email</td>
                            <td>@person.phone</td>
                            <td>@person.birthday</td>
                            <td>@person.gender</td>
                        </tr>
            }
            </tbody>
        </table>
}
else
{
        <p>No data loaded. Click the "Load Person Data" button to load person data.</p>
}
